{"version":3,"sources":["constants/index.js","api/refden.js","lib/wordContentControls/getReferencesControlItems.js","lib/wordContentControls/getReferenceIdFromControlItem.ts","lib/wordContentControls/index.js","lib/wordContentControls/mapControlItemsWithIds.js","lib/wordContentControls/getRestReferenceIdsFromControlItem.ts","lib/contentControls.ts","lib/bibliography/getReferenceIndex.js","lib/bibliography/isCitationFormatWithNumbers.js","lib/bibliography/insertCitationText.js","lib/bibliography/getCitationText.js","lib/bibliography/updateBibliography.ts","lib/bibliography/index.js","components/Reference/Reference.jsx","components/List.tsx","components/Bibliography/Bibliography.jsx","components/Settings/Settings.jsx","components/Lists.jsx","components/Login.jsx","components/App.jsx","index.js"],"names":["LOCAL_STORAGE__STYLE","LOCAL_STORAGE__LOCALE","REFDEN_URL","STYLES","key","text","STYLES_WITH_BRACKETS","LOCALES","buildUrl","path","headers","JSON","parse","localStorage","getItem","getLists","axios","get","getReferences","list","id","getReference","reference","page","params","locator","style","locale","getReferenceWithIds","referenceId","otherIds","extra_ids","join","login","email","password","post","onlyReferences","_","flow","startsWith","getReferencesControlItems","filter","getIds","item","tag","split","getReferenceIdFromControlItem","first","getRestReferenceIdsFromControlItem","tail","initializeBibliographyContentControl","map","uniq","curry","result","controlItem","isEmpty","push","bibliographyContentControls","document","contentControl","items","body","insertParagraph","window","Word","InsertLocation","end","insertContentControl","clear","ids","buildCitationIndex","index","cslStyle","referenceIndex","toString","includes","sup","updateIndexes","contentControls","referenceTagIndexes","referenceItems","uniqueReferenceItems","uniqBy","forEach","has","tagForCurrentId","insertHtml","updateIndex","buildTag","responseData","references","buildTitle","stringify","getReferenceIndex","IS_WITH_NUMBER_REGEX","isCitationFormatWithNumbers","citationText","test","insertCitationText","referenceItem","citation","insertText","getCitationText","data","opts","suppressAuthor","citation_suppress_author","onlyAuthor","slice","concat","onlyPage","updateBibliography","run","context","load","PARAMS_TO_LOAD","sync","then","a","refden","response","title","generateBibliography","updateReferencesInDocument","getUniqueReferences","referencesInContentControl","getReferencesFromControls","sortBy","identity","setLineIndents","lineIndent","paragraphs","firstLineIndent","getByTag","getBibliographyContentControls","showAuthors","truncate","length","Reference","props","renderPageInput","Separator","padding","TextField","label","value","state","onChange","_event","setState","handleOnClick","options","onClick","hasPage","render","className","published_year","DefaultButton","width","menuProps","shouldFocusOnMount","iconProps","iconName","secondaryText","disabled","onRender","Component","referenceIncludesText","toLowerCase","some","lowerCase","authorIncludesText","authors","generateMultipleCitation","generateCitation","currentRange","getSelection","range","getRange","RangeLocation","whole","locationRelation","compareLocationWith","LocationRelation","inside","newContentControl","List","debouncedSearch","debounce","searchText","componentDidMount","loading","catch","console","log","insertCitation","visibleReferences","renderList","Spinner","size","SpinnerSize","large","MessageBar","Link","href","target","name","SearchBox","placeholder","Bibliography","primary","initializeLocalStorage","setItem","Settings","changeStyle","selectedStyleKey","changeLocale","selectedLocaleKey","Dropdown","selectedKey","Lists","lists","handleListClick","selectedList","unSelectList","renderLists","renderListsContainer","logout","Login","handleChange","event","handleSubmit","handleLogin","preventDefault","rel","onSubmit","this","type","required","autoComplete","isLogged","expiryInMs","parseInt","expiry","Date","now","axiosOnResponseOk","axiosOnResponseError","error","status","Promise","reject","App","Rollbar","configure","payload","person","errorMsg","errors","toastr","removeItem","interceptors","use","process","Office","initialize","initializeIcons","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ed1388dc.chunk.js","sourcesContent":["export const LOCAL_STORAGE__STYLE = 'style';\nexport const LOCAL_STORAGE__LOCALE = 'locale';\n\nexport const REFDEN_URL = 'https://www.refden.co?utm_source=word';\n\nexport const REFERENCE_TAG_PREFIX = 'refden-ref-';\n\nexport const STYLES = [\n  { key: 'american-medical-association', text: 'American Medical Association' },\n  { key: 'american-society-of-mechanical-engineers', text: 'ASME' },\n  { key: 'apa', text: 'APA' },\n  { key: 'apa-no-ampersand', text: 'APA without &' },\n  { key: 'ieee', text: 'IEEE' },\n  { key: 'harvard-cite-them-right', text: 'Harvard - Cite Them Right' },\n  { key: 'sage-harvard', text: 'SAGE - Harvard' },\n  { key: 'vancouver', text: 'Vancouver' },\n];\n\nexport const STYLES_WITH_BRACKETS = [\n  'american-society-of-mechanical-engineers',\n  'ieee',\n];\n\nexport const LOCALES = [\n  { key: 'en-US', text: 'en-US' },\n  { key: 'en-GB', text: 'en-GB' },\n  { key: 'es-ES', text: 'es-ES' },\n];\n","import axios from 'axios';\n\nimport { LOCAL_STORAGE__STYLE, LOCAL_STORAGE__LOCALE } from '../constants';\n\nconst BASE_URL = 'https://www.refden.co/api/';\n\nconst buildUrl = (path) => `${BASE_URL}${path}`;\n\nconst headers = () => JSON.parse(localStorage.getItem('headers'));\n\nexport const getLists = () => axios.get(buildUrl('lists'), { headers: headers() });\n\nexport const getReferences = (list) => axios.get(buildUrl(`lists/${list.id}/references`), { headers: headers() });\n\nexport const getReference = (reference, page) => axios.get(buildUrl(`references/${reference.id}`), {\n  params: {\n    locator: page,\n    style: localStorage.getItem(LOCAL_STORAGE__STYLE),\n    locale: localStorage.getItem(LOCAL_STORAGE__LOCALE),\n  },\n  headers: headers(),\n});\n\nexport const getReferenceWithIds = (referenceId, otherIds) => axios.get(buildUrl(`references/${referenceId}`), {\n  params: {\n    extra_ids: otherIds.join(','),\n    style: localStorage.getItem(LOCAL_STORAGE__STYLE),\n    locale: localStorage.getItem(LOCAL_STORAGE__LOCALE),\n  },\n  headers: headers(),\n});\n\nexport const getReferencesFromIds = (ids) => axios.get(buildUrl('references_exporter'), {\n  params: {\n    ids,\n    style: localStorage.getItem(LOCAL_STORAGE__STYLE),\n    locale: localStorage.getItem(LOCAL_STORAGE__LOCALE),\n  },\n  headers: headers(),\n});\n\nexport const login = (email, password) => axios.post(buildUrl('auth/sign_in'), {\n  email,\n  password,\n});\n","import _ from 'lodash/fp';\n\nimport { REFERENCE_TAG_PREFIX } from '../../constants/index';\n\nconst onlyReferences = _.flow(\n  _.get('tag'),\n  _.startsWith(REFERENCE_TAG_PREFIX),\n);\n\nconst getReferencesControlItems = _.flow(\n  _.get('items'),\n  _.filter(onlyReferences),\n);\n\nexport default getReferencesControlItems;\n","import _ from 'lodash/fp';\n\nimport { REFERENCE_TAG_PREFIX } from '../../constants';\n\nconst getIds = (item: Word.ContentControl) => item.tag.split(REFERENCE_TAG_PREFIX)[1].split('-');\n\nexport const getReferenceIdFromControlItem = _.flow(\n  getIds,\n  _.first,\n);\n\nexport const getRestReferenceIdsFromControlItem = _.flow(\n  getIds,\n  _.tail,\n);\n","import _ from 'lodash/fp';\n\nconst BIBLIOGRAPHY_TAG = 'refden_bibliography';\n\nconst getBibliographyContentControls = (contentControls) => (\n  contentControls.getByTag(BIBLIOGRAPHY_TAG)\n);\n\nconst initializeBibliographyContentControl = (bibliographyContentControls, document) => {\n  let contentControl;\n\n  if (_.isEmpty(bibliographyContentControls.items)) {\n    const paragraph = document.body.insertParagraph('', window.Word.InsertLocation.end);\n    contentControl = paragraph.insertContentControl();\n    contentControl.tag = BIBLIOGRAPHY_TAG;\n  } else {\n    // eslint-disable-next-line prefer-destructuring\n    contentControl = bibliographyContentControls.items[0];\n    contentControl.clear();\n  }\n  return contentControl;\n};\n\nexport { default as getReferencesControlItems } from './getReferencesControlItems';\nexport { default as mapControlItemsWithIds } from './mapControlItemsWithIds';\n\nexport {\n  initializeBibliographyContentControl,\n  getBibliographyContentControls,\n};\n","import _ from 'lodash/fp';\n\nimport { getReferenceIdFromControlItem } from './getReferenceIdFromControlItem';\n\nconst getIds = _.flow(\n  _.map(getReferenceIdFromControlItem),\n  _.uniq,\n);\n\nconst assignControlItemToId = _.curry((result, controlItem) => {\n  const id = getReferenceIdFromControlItem(controlItem);\n\n  if (_.isEmpty(result[id])) {\n    // eslint-disable-next-line no-param-reassign\n    result[id] = [controlItem];\n  } else {\n    result[id].push(controlItem);\n  }\n});\n\nconst mapControlItemsWithIds = (controlItems) => {\n  const result = {};\n\n  result.ids = getIds(controlItems);\n  controlItems.forEach(assignControlItemToId(result));\n\n  return result;\n};\n\nexport default mapControlItemsWithIds;\n","import _ from 'lodash/fp';\n\nimport { REFERENCE_TAG_PREFIX } from '../../constants';\n\nconst getRestReferenceIdsFromControlItem = (item: Word.ContentControl) => {\n  const ids = item.tag.split(REFERENCE_TAG_PREFIX)[1];\n  return _.tail(ids.split('-'));\n};\n\nexport default getRestReferenceIdsFromControlItem;\n","import _ from 'lodash/fp';\n\nimport { REFERENCE_TAG_PREFIX, STYLES_WITH_BRACKETS } from '../constants';\n\nimport { getReferencesControlItems } from './wordContentControls';\nimport getRestReferenceIdsFromControlItem\n  from './wordContentControls/getRestReferenceIdsFromControlItem';\n\nconst buildCitationIndex = (index: number, cslStyle: string) => {\n  const referenceIndex = (index + 1).toString();\n\n  if (STYLES_WITH_BRACKETS.includes(cslStyle)) {\n    return `[${referenceIndex}]`;\n  }\n  return referenceIndex.sup();\n};\n\nconst updateIndex = (item: Word.ContentControl, referenceIndex: string) => {\n  item.clear();\n  item.insertHtml(referenceIndex, window.Word.InsertLocation.end);\n};\n\nexport const updateIndexes = (contentControls: Word.ContentControl[], cslStyle: string) => {\n  const referenceTagIndexes: any = {};\n\n  const referenceItems: Word.ContentControl[] = getReferencesControlItems(contentControls);\n  const uniqueReferenceItems: Word.ContentControl[] = _.uniqBy('tag', referenceItems);\n\n  let index = 0;\n  uniqueReferenceItems.forEach((item) => {\n    if (_.has(item.tag, referenceTagIndexes)) {\n      return;\n    }\n\n    referenceTagIndexes[item.tag] = buildCitationIndex(index, cslStyle);\n    index += 1;\n\n    const otherIds = getRestReferenceIdsFromControlItem(item);\n    _.forEach((id) => {\n      const tagForCurrentId = `${REFERENCE_TAG_PREFIX}${id}`;\n      referenceTagIndexes[item.tag] += ', ';\n\n      if (_.has(tagForCurrentId, referenceTagIndexes)) {\n        referenceTagIndexes[item.tag] += referenceTagIndexes[tagForCurrentId];\n      } else {\n        referenceTagIndexes[item.tag] += buildCitationIndex(index, cslStyle);\n        referenceTagIndexes[tagForCurrentId] = buildCitationIndex(index, cslStyle);\n        index += 1;\n      }\n    }, otherIds);\n  });\n\n  referenceItems.forEach((item) => updateIndex(item, referenceTagIndexes[item.tag]));\n};\n\nexport const buildTag = (responseData: any) => {\n  let tag = `${REFERENCE_TAG_PREFIX}${responseData.id.toString()}`;\n\n  if (!_.isEmpty(responseData.references)) {\n    responseData.references.forEach((reference: ReferenceType) => {\n      tag += `-${reference.id.toString()}`;\n    });\n  }\n\n  return tag;\n};\n\nexport const buildTitle = (references: any) => JSON.stringify(references);\n","import { STYLES_WITH_BRACKETS } from '../../constants';\n\nconst getReferenceIndex = (index, cslStyle) => {\n  const referenceIndex = (index + 1).toString();\n\n  if (STYLES_WITH_BRACKETS.includes(cslStyle)) {\n    return `[${referenceIndex}] `;\n  }\n\n  return `${referenceIndex}. `;\n};\n\nexport default getReferenceIndex;\n","const IS_WITH_NUMBER_REGEX = /(^(x|\\d|\\[\\d]|\\(,\\))$)/;\n\nconst isCitationFormatWithNumbers = (referenceItems) => {\n  const citationText = referenceItems[0].text;\n\n  return IS_WITH_NUMBER_REGEX.test(citationText);\n};\n\nexport default isCitationFormatWithNumbers;\n","import _ from 'lodash/fp';\n\nconst insertCitationText = (referenceItem, citation) => {\n  referenceItem.clear();\n\n  if (_.isEmpty(citation)) {\n    referenceItem.insertHtml('x'.sup(), window.Word.InsertLocation.end);\n  } else {\n    referenceItem.insertText(citation, window.Word.InsertLocation.end);\n  }\n};\n\nexport default insertCitationText;\n","const getCitationText = (data, opts) => {\n  if (opts.suppressAuthor) {\n    return data.citation_suppress_author;\n  }\n  if (opts.onlyAuthor) {\n    return data.citation.split(',').slice(0, -1).join('').concat(')');\n  }\n  if (opts.onlyPage) {\n    return `(${opts.page})`;\n  }\n\n  return data.citation;\n};\n\nexport default getCitationText;\n","import _ from 'lodash/fp';\n\nimport { getReferencesControlItems } from '../wordContentControls';\nimport * as refden from '../../api/refden';\nimport {\n  getReferenceIdFromControlItem,\n  getRestReferenceIdsFromControlItem,\n} from '../wordContentControls/getReferenceIdFromControlItem';\nimport { buildTag, buildTitle } from '../contentControls';\n\nimport insertCitationText from './insertCitationText';\nimport getCitationText from './getCitationText';\n\nimport generateBibliography, { PARAMS_TO_LOAD } from './index';\n\nexport const updateReferencesInDocument = (context: Word.RequestContext) => async () => {\n  const referenceItems = getReferencesControlItems(context.document.contentControls);\n  if (_.isEmpty(referenceItems)) return;\n\n  // eslint-disable-next-line\n  for (const contentControl of referenceItems) {\n    const id = getReferenceIdFromControlItem(contentControl);\n    const otherIds = getRestReferenceIdsFromControlItem(contentControl);\n    // eslint-disable-next-line no-await-in-loop\n    const response = await refden.getReferenceWithIds(id, otherIds);\n\n    const references = [response.data.reference];\n    _.forEach(\n      (reference: any) => references.push(reference.reference),\n      response.data.references,\n    );\n\n    contentControl.tag = buildTag(response.data);\n    contentControl.title = buildTitle(references);\n\n    // TODO: pass opts? Somehow we need to store the opts in the ContentControl object\n    const citation = getCitationText(response.data, {});\n    insertCitationText(contentControl, citation);\n  }\n\n  context.sync().then(generateBibliography);\n};\n\nconst updateBibliography = () => {\n  window.Word.run((context) => {\n    const { contentControls } = context.document;\n    context.load(contentControls, PARAMS_TO_LOAD);\n\n    return context.sync().then(updateReferencesInDocument(context));\n  });\n};\n\nexport default updateBibliography;\n","import _ from 'lodash/fp';\n\nimport { LOCAL_STORAGE__STYLE } from '../../constants';\nimport { updateIndexes } from '../contentControls';\nimport {\n  getBibliographyContentControls,\n  initializeBibliographyContentControl,\n  getReferencesControlItems,\n} from '../wordContentControls';\n\nimport getReferenceIndex from './getReferenceIndex';\nimport isCitationFormatWithNumbers from './isCitationFormatWithNumbers';\n\nconst HANGING_INDENT = -35;\nconst NONE_INDENT = 0;\n\nexport const REFERENCE_TEXT = 'title';\nexport const PARAMS_TO_LOAD = [\n  'tag',\n  'text',\n  'items',\n  REFERENCE_TEXT,\n];\n\nexport { default as updateBibliography } from './updateBibliography';\n\nconst getUniqueReferences = (contentControls) => {\n  let references = [];\n\n  _.forEach((contentControl) => {\n    const referencesInContentControl = JSON.parse(_.get(REFERENCE_TEXT, contentControl));\n    references = references.concat(referencesInContentControl);\n  }, contentControls);\n\n  return _.uniq(references);\n};\n\nconst getReferencesFromControls = _.flow(\n  getUniqueReferences,\n  _.sortBy(_.identity),\n);\n\nconst setLineIndents = async (context, contentControl, lineIndent) => {\n  const { paragraphs } = contentControl;\n\n  context.load(paragraphs, ['items']);\n  await context.sync();\n\n  paragraphs.items.forEach((item) => {\n    context.load(item, ['firstLineIndent', 'text']);\n  });\n  await context.sync();\n\n  paragraphs.items.forEach((item) => {\n    // eslint-disable-next-line no-param-reassign\n    item.firstLineIndent = lineIndent;\n  });\n};\n\nconst generateBibliography = () => {\n  const { Word } = window;\n\n  Word.run((context) => {\n    const { document } = context;\n    const { contentControls } = document;\n\n    const bibliographyContentControls = getBibliographyContentControls(contentControls);\n\n    context.load(contentControls, PARAMS_TO_LOAD);\n    context.load(bibliographyContentControls);\n\n    return context.sync().then(async () => {\n      const contentControl = initializeBibliographyContentControl(\n        bibliographyContentControls,\n        document,\n      );\n\n      const referenceItems = getReferencesControlItems(contentControls);\n      if (_.isEmpty(referenceItems)) return;\n\n      let references;\n\n      if (isCitationFormatWithNumbers(referenceItems)) {\n        const cslStyle = localStorage.getItem(LOCAL_STORAGE__STYLE);\n        updateIndexes(contentControls, cslStyle);\n        references = getUniqueReferences(referenceItems);\n\n        references.forEach((reference, index) => {\n          const referenceIndex = getReferenceIndex(index, cslStyle);\n          contentControl.insertText(referenceIndex, Word.InsertLocation.end);\n          contentControl.insertHtml(reference, Word.InsertLocation.end);\n          contentControl.insertText('\\n', Word.InsertLocation.end);\n        });\n\n        await setLineIndents(context, contentControl, NONE_INDENT);\n        return;\n      }\n      references = getReferencesFromControls(referenceItems);\n\n      references.forEach((reference) => {\n        contentControl.insertHtml(reference, Word.InsertLocation.end);\n        contentControl.insertText('\\n', Word.InsertLocation.end);\n      });\n\n      await setLineIndents(context, contentControl, HANGING_INDENT);\n    });\n  });\n};\n\nexport default generateBibliography;\n","import React, { Component } from 'react';\nimport _ from 'lodash/fp';\nimport PropTypes from 'prop-types';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Separator } from 'office-ui-fabric-react/lib/Separator';\n\nconst showAuthors = _.flow(\n  _.get('authors'),\n  _.map('name'),\n  _.join(','),\n  _.truncate({ length: 40 }),\n);\n\nclass Reference extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: '',\n    };\n  }\n\n  renderPageInput = () => (\n    <div>\n      <Separator />\n      <div style={{ padding: '0 15px 15px' }}>\n        <TextField\n          label=\"Page:\"\n          value={this.state.page}\n          onChange={(_event, page) => this.setState({ page })}\n        />\n      </div>\n    </div>\n  );\n\n  handleOnClick = (options = {}) => () => {\n    // eslint-disable-next-line no-param-reassign\n    options.page = this.state.page;\n\n    this.props.onClick(options);\n  };\n\n  hasPage = () => this.state.page !== '';\n\n  render = () => (\n    <div className=\"pure-u-1 list\">\n      {this.props.reference.title}\n      <br />\n      <small>\n        {showAuthors(this.props.reference)}\n        &nbsp;\n        {this.props.reference.published_year}\n      </small>\n      <DefaultButton\n        className=\"my-1\"\n        style={{ width: '100%' }}\n        text=\"Insert Citation & Reference\"\n        menuProps={{\n          shouldFocusOnMount: true,\n          items: [\n            {\n              key: 'default',\n              iconProps: {\n                iconName: 'InsertSignatureLine',\n              },\n              text: 'Default',\n              secondaryText: '(Author, 2000)',\n              onClick: this.handleOnClick(),\n            },\n            {\n              key: 'without_author',\n              iconProps: {\n                iconName: 'InsertSignatureLine',\n              },\n              text: 'Suppress Author',\n              secondaryText: '(2000)',\n              onClick: this.handleOnClick({ suppressAuthor: true }),\n            },\n            {\n              key: 'only_author',\n              iconProps: {\n                iconName: 'InsertSignatureLine',\n              },\n              text: 'Only Author',\n              secondaryText: '(Author)',\n              disabled: this.hasPage(),\n              onClick: this.handleOnClick({ onlyAuthor: true }),\n            },\n            {\n              key: 'only_page',\n              iconProps: {\n                iconName: 'InsertSignatureLine',\n              },\n              text: 'Only Page',\n              secondaryText: '(10)',\n              disabled: !this.hasPage(),\n              onClick: this.handleOnClick({ onlyPage: true, page: this.state.page }),\n            },\n            {\n              key: 'page',\n              onRender: this.renderPageInput,\n            },\n          ],\n        }}\n      />\n    </div>\n  )\n}\n\nReference.propTypes = {\n  reference: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    published_year: PropTypes.number,\n  }).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Reference;\n","import React, { Component } from 'react';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { MessageBar } from 'office-ui-fabric-react/lib/MessageBar';\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\nimport { SearchBox } from 'office-ui-fabric-react/lib/SearchBox';\nimport _ from 'lodash/fp';\n\nimport * as refden from '../api/refden';\nimport { REFDEN_URL } from '../constants';\nimport generateBibliography from '../lib/bibliography';\nimport getCitationText from '../lib/bibliography/getCitationText';\nimport insertCitationText from '../lib/bibliography/insertCitationText';\nimport {\n  getReferenceIdFromControlItem,\n  getRestReferenceIdsFromControlItem,\n}\n  from '../lib/wordContentControls/getReferenceIdFromControlItem';\nimport { buildTag, buildTitle } from '../lib/contentControls';\n\nimport Reference from './Reference/Reference';\n\nimport './Lists.css';\n\ntype ListProps = {\n  list: {\n    name: string;\n  };\n}\n\ntype ListState = {\n  loading: boolean;\n  references: ReferenceType[];\n  searchText: string;\n}\n\nconst authorIncludesText = (text: string) => _.flow(\n  _.get('name'),\n  _.lowerCase,\n  _.includes(text),\n);\n\nconst referenceIncludesText = (text: string) => (reference: ReferenceType) => (\n  (reference.title && reference.title.toLowerCase().includes(text))\n  || (_.some(authorIncludesText(text), reference.authors))\n);\n\nconst generateMultipleCitation = async (\n  data: any,\n  context: Word.RequestContext,\n  contentControl: Word.ContentControl,\n) => {\n  const id = getReferenceIdFromControlItem(contentControl);\n  const otherIds = getRestReferenceIdsFromControlItem(contentControl);\n  otherIds.push(data.id);\n\n  const response = await refden.getReferenceWithIds(id, otherIds);\n\n  const references = [response.data.reference];\n  response.data.references.forEach((reference: any) => {\n    references.push(reference.reference);\n  });\n\n  contentControl.tag = buildTag(response.data);\n  contentControl.title = buildTitle(references);\n\n  const citation = getCitationText(response.data, {});\n  insertCitationText(contentControl, citation);\n\n  await context.sync();\n};\n\nconst generateCitation = async (\n  data: any,\n  context: Word.RequestContext,\n  opts: { page: string },\n) => {\n  const currentRange = context.document.getSelection();\n  const { contentControls } = context.document;\n\n  context.load(contentControls);\n  await context.sync();\n\n  // eslint-disable-next-line\n  for (const contentControl of contentControls.items) {\n    const range = contentControl.getRange(window.Word.RangeLocation.whole);\n    const locationRelation = currentRange.compareLocationWith(range);\n    // eslint-disable-next-line no-await-in-loop\n    await context.sync();\n\n    if (locationRelation.value === window.Word.LocationRelation.inside) {\n      // eslint-disable-next-line no-await-in-loop\n      await generateMultipleCitation(data, context, contentControl);\n\n      return;\n    }\n  }\n\n  const newContentControl = currentRange.insertContentControl();\n  newContentControl.tag = buildTag(data);\n  newContentControl.title = buildTitle([data.reference]);\n\n  const citation = getCitationText(data, opts);\n  insertCitationText(newContentControl, citation);\n\n  await context.sync();\n};\n\nclass List extends Component<ListProps, ListState> {\n  debouncedSearch = _.debounce(\n    150,\n    (searchText) => this.setState({ searchText: searchText.toLowerCase() }),\n  );\n\n  constructor(props: ListProps) {\n    super(props);\n    this.state = {\n      loading: false,\n      references: [],\n      searchText: '',\n    };\n  }\n\n  componentDidMount = () => {\n    this.setState({ loading: true });\n    refden.getReferences(this.props.list)\n      .then((response) => this.setState({ loading: false, references: response.data }))\n      .catch(console.log); // eslint-disable-line no-console\n  };\n\n  insertCitation = (reference: ReferenceType) => (opts: { page: string } = { page: '' }) => {\n    refden.getReference(reference, opts.page)\n      .then((response) => {\n        const { data } = response;\n        const { Word } = window;\n\n        Word.run(async (context) => {\n          await generateCitation(data, context, opts);\n          generateBibliography();\n        });\n      })\n      .catch(console.log); // eslint-disable-line no-console\n  };\n\n  visibleReferences = () => (\n    this.state.references.filter(referenceIncludesText(this.state.searchText))\n  );\n\n  renderList = () => {\n    if (this.state.loading) return <Spinner size={SpinnerSize.large} />;\n    if (this.state.references.length === 0) {\n      return (\n        <MessageBar>\n          You need to add a reference first at\n          <Link href={REFDEN_URL} target=\"_blank\">our website.</Link>\n        </MessageBar>\n      );\n    }\n\n    return (\n      this.visibleReferences().map((reference, index) => (\n        // TODO: fix api returning duplicated records\n        <Reference\n          key={`${reference.id}-${index}`} // eslint-disable-line react/no-array-index-key\n          reference={reference}\n          onClick={this.insertCitation(reference)}\n        />\n      ))\n    );\n  };\n\n  render = () => (\n    <div className=\"pure-u-1\">\n      <h1 className=\"pure-u-1\">{this.props.list.name}</h1>\n      <SearchBox\n        placeholder={'Search for \"title\" or \"author\"'}\n        onChange={this.debouncedSearch}\n      />\n      <br />\n      {this.renderList()}\n    </div>\n  );\n}\n\nexport default List;\n","import React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\n\nimport generateBibliography from '../../lib/bibliography';\n\nimport './Bibliography.css';\n\nconst Bibliography = () => (\n  <div className=\"pure-u-1\">\n    <DefaultButton\n      primary\n      className=\"pure-u-1 bibliography-btn\"\n      onClick={generateBibliography}\n    >\n      Update Bibliography\n    </DefaultButton>\n  </div>\n);\n\nexport default Bibliography;\n","import React, { Component } from 'react';\nimport _ from 'lodash/fp';\nimport { Dropdown } from 'office-ui-fabric-react/lib/Dropdown';\n\nimport Bibliography from '../Bibliography/Bibliography';\nimport {\n  LOCAL_STORAGE__STYLE, LOCAL_STORAGE__LOCALE, STYLES, LOCALES,\n} from '../../constants';\nimport { updateBibliography } from '../../lib/bibliography/index';\n\nconst DEFAULT_STYLE = 'apa';\nconst DEFAULT_LOCALE = 'en-US';\n\nconst initializeLocalStorage = () => {\n  if (_.isEmpty(localStorage.getItem(LOCAL_STORAGE__STYLE))) {\n    localStorage.setItem(LOCAL_STORAGE__STYLE, DEFAULT_STYLE);\n  }\n\n  if (_.isEmpty(localStorage.getItem(LOCAL_STORAGE__LOCALE))) {\n    localStorage.setItem(LOCAL_STORAGE__LOCALE, DEFAULT_LOCALE);\n  }\n};\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n\n    initializeLocalStorage();\n\n    this.state = {\n      selectedStyleKey: localStorage.getItem(LOCAL_STORAGE__STYLE),\n      selectedLocaleKey: localStorage.getItem(LOCAL_STORAGE__LOCALE),\n    };\n  }\n\n  changeStyle = (_event, item) => {\n    localStorage.setItem(LOCAL_STORAGE__STYLE, item.key);\n    this.setState({ selectedStyleKey: item.key });\n    updateBibliography();\n  };\n\n  changeLocale = (_event, item) => {\n    localStorage.setItem(LOCAL_STORAGE__LOCALE, item.key);\n    this.setState({ selectedLocaleKey: item.key });\n    updateBibliography();\n  };\n\n  render = () => (\n    [\n      <Bibliography key=\"bibliography\" />,\n      <div key=\"styles\" className=\"pure-u-1\">\n        <Dropdown\n          label=\"Style:\"\n          selectedKey={this.state.selectedStyleKey}\n          onChange={this.changeStyle}\n          placeholder=\"Select an Style\"\n          options={STYLES}\n        />\n      </div>,\n      <div key=\"locales\" className=\"pure-u-1\">\n        <Dropdown\n          label=\"Locale:\"\n          selectedKey={this.state.selectedLocaleKey}\n          onChange={this.changeLocale}\n          placeholder=\"Select a Locale\"\n          options={LOCALES}\n        />\n      </div>,\n    ]\n  );\n}\n\nexport default Settings;\n","import React, { Component } from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { MessageBar } from 'office-ui-fabric-react/lib/MessageBar';\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\n\nimport * as refden from '../api/refden';\nimport { REFDEN_URL } from '../constants';\n\nimport List from './List';\nimport Settings from './Settings/Settings';\n\nimport './Lists.css';\n\nclass Lists extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: [],\n      loading: false,\n      selectedList: null,\n    };\n  }\n\n  componentDidMount = () => {\n    this.setState({ loading: true });\n    refden.getLists()\n      .then((response) => this.setState({ lists: response.data, loading: false }))\n      // eslint-disable-next-line no-console\n      .catch(console.log);\n  };\n\n  handleListClick = (list) => () => {\n    this.setState({ selectedList: list });\n  };\n\n  unSelectList = () => {\n    this.setState({ selectedList: null });\n  };\n\n  renderList = () => (\n    <List\n      key={this.state.selectedList.id}\n      list={this.state.selectedList}\n    />\n  );\n\n  renderLists = () => {\n    if (this.state.loading) return <Spinner size={SpinnerSize.large} />;\n    if (this.state.lists.length === 0) {\n      return (\n        <MessageBar>\n          You need to create a list first at\n          <Link href={REFDEN_URL} target=\"_blank\">our website.</Link>\n        </MessageBar>\n      );\n    }\n\n    return (\n      this.state.lists.map((list) => (\n        // eslint-disable-next-line jsx-a11y/anchor-is-valid\n        <Link\n          key={list.id}\n          className=\"pure-u-1 list\"\n          onClick={this.handleListClick(list)}\n        >\n          {list.name}\n        </Link>\n      ))\n    );\n  };\n\n  renderListsContainer = () => (\n    <div className=\"pure-u-1\">\n      <h1 className=\"pure-u-1\">Lists</h1>\n      {this.renderLists()}\n    </div>\n  );\n\n  render = () => (\n    <div className=\"pure-g lists-container\">\n      <Settings />\n      {\n        this.state.selectedList === null ? this.renderListsContainer() : this.renderList()\n      }\n      {\n        this.state.selectedList !== null\n          && (\n          <DefaultButton\n            className=\"pure-u-1-3 mt-1 go-back\"\n            onClick={this.unSelectList}\n          >\n            Go back\n          </DefaultButton>\n          )\n      }\n      {/* eslint-disable-next-line react/prop-types */}\n      <DefaultButton className=\"pure-u-1-3 mt-1\" onClick={this.props.logout}>Log out</DefaultButton>\n    </div>\n  )\n}\n\nexport default Lists;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { REFDEN_URL } from '../constants';\n\nimport './Login.css';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    this.props.handleLogin(this.state.email, this.state.password);\n    event.preventDefault();\n  };\n\n  render() {\n    return (\n      <div id=\"loginContainer\">\n        <div className=\"pure-g\">\n          <p className=\"pure-u-1\">\n            Login and bring your references from your account at&nbsp;\n            <a href={REFDEN_URL} target=\"_blank\" rel=\"noopener noreferrer\">www.refden.co</a>\n            . See a video example&nbsp;\n            <a href=\"https://www.youtube.com/watch?v=0-fXMe0zd8Y\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>\n            .\n          </p>\n        </div>\n        <form className=\"pure-form pure-form-stacked text-center\" onSubmit={this.handleSubmit}>\n          <h2>Log in</h2>\n          <input\n            type=\"email\"\n            name=\"email\"\n            className=\"align-center\"\n            required\n            value={this.state.email}\n            autoComplete=\"username\"\n            placeholder=\"Email\"\n            onChange={this.handleChange}\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            className=\"align-center\"\n            required\n            value={this.state.password}\n            autoComplete=\"current-password\"\n            placeholder=\"Password\"\n            onChange={this.handleChange}\n          />\n          <input\n            className=\"pure-button pure-button-primary mt-1\"\n            type=\"submit\"\n            value=\"Submit\"\n          />\n        </form>\n        <br />\n        <div className=\"pure-g\">\n          <p className=\"pure-u-1\">\n            Don&apos;t have a Refden account? Sign up or learn more about our services&nbsp;\n            <a href={REFDEN_URL} target=\"_blank\" rel=\"noopener noreferrer\">\n              here\n            </a>\n            .\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import React, { Component } from 'react';\nimport toastr from 'toastr';\nimport axios from 'axios';\n\nimport * as refden from '../api/refden';\n\nimport Lists from './Lists';\nimport Login from './Login';\n\nimport './App.css';\n\nconst isLogged = () => {\n  const headers = JSON.parse(localStorage.getItem('headers'));\n  if (headers === null) return false;\n\n  const expiryInMs = parseInt(headers.expiry, 10) * 1000;\n  return expiryInMs && expiryInMs > Date.now();\n};\n\nconst axiosOnResponseOk = (response) => response;\nconst axiosOnResponseError = (logout) => (error) => {\n  if (error.response && error.response.status === 401) {\n    logout();\n  }\n\n  return Promise.reject(error);\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    axios.interceptors.response.use(axiosOnResponseOk, axiosOnResponseError(this.logout));\n\n    this.state = {\n      isLogged: isLogged(),\n    };\n  }\n\n  handleLogin = (email, password) => {\n    refden.login(email, password)\n      .then((response) => {\n        localStorage.setItem('headers', JSON.stringify(response.headers));\n        window.Rollbar.configure({\n          payload: {\n            person: {\n              id: response.data.data.id,\n              email: response.data.data.email,\n            },\n          },\n        });\n        this.setState({ isLogged: true });\n      })\n      .catch((error) => {\n        const errorMsg = error.response.data.errors[0];\n        toastr.error(errorMsg);\n      });\n  };\n\n  logout = () => {\n    localStorage.removeItem('headers');\n    this.setState({ isLogged: false });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {\n          process.env.NODE_ENV === 'development' && (\n            <div className=\"development-badge\">\n              Development\n            </div>\n          )\n        }\n        {\n          this.state.isLogged\n            ? <Lists logout={this.logout} />\n            : <Login handleLogin={this.handleLogin} />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable react/jsx-filename-extension */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\nimport 'react-app-polyfill/ie11'; // NOTE: support for ie11 for now\n\nimport App from './components/App';\n\nimport './index.css';\nimport 'toastr/build/toastr.min.css';\nimport 'purecss/build/pure-min.css';\n\n// INFO: The add-in is ready to start interacting with the application and hosted document.\nwindow.Office.initialize = () => {\n  initializeIcons();\n  ReactDOM.render(<App />, document.getElementById('root'));\n};\n"],"sourceRoot":""}