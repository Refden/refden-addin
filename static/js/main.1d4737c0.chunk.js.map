{"version":3,"sources":["constants/index.js","api/refden.js","lib/getReferencesControlItems.js","lib/contentControls.js","lib/getReferenceIdFromControlItem.js","lib/generateBibliography/getReferenceIndex.js","lib/generateBibliography/isCitationFormatWithNumbers.js","lib/generateBibliography/insertCitationText.js","lib/generateBibliography/index.js","components/Reference/Reference.jsx","components/List.jsx","components/Bibliography/Bibliography.jsx","components/Settings/Settings.jsx","components/Lists.jsx","components/Login.jsx","components/App.jsx","registerServiceWorker.js","index.js"],"names":["LOCAL_STORAGE__STYLE","LOCAL_STORAGE__LOCALE","REFDEN_URL","REFERENCE_TAG_PREFIX","STYLES","key","text","STYLES_WITH_BRACKETS","LOCALES","buildUrl","path","concat","headers","JSON","parse","localStorage","getItem","getLists","axios","get","getReferences","list","id","getReference","reference","getReferenceFromId","params","style","locale","login","email","password","post","onlyReferences","_","flow","startsWith","getReferencesControlItems","filter","updateIndexes","contentControls","cslStyle","referenceTagIndexes","referenceItems","uniqBy","forEach","item","index","tag","referenceIndex","toString","includes","sup","buildCitationIndex","clear","insertHtml","window","Word","InsertLocation","end","updateIndex","getReferenceIdFromControlItem","split","getReferenceIndex","IS_WITH_NUMBER_REGEX","isCitationFormatWithNumbers","citationText","test","insertCitationText","referenceItem","citation","isEmpty","insertText","PARAMS_TO_LOAD","getUniqueReferences","map","uniq","getReferencesFromControls","sortBy","identity","updateBibliography","run","context","document","load","sync","then","refden","response","data","title","generateBibliography","catch","removeItem","bibliographyControls","getByTag","contentControl","items","body","insertParagraph","insertContentControl","getBibliographyControl","showAuthors","join","truncate","length","Reference","_ref","onClick","react_default","a","createElement","className","published_year","TooltipHost","content","calloutProps","gapSpace","Link","aria-describedby","Icon","iconName","List","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","setState","loading","references","logout","insertCitation","event","preventDefault","getSelection","renderList","state","Spinner","size","SpinnerSize","large","MessageBar","href","target","components_Reference_Reference","render","name","Component","Bibliography","DefaultButton","primary","Settings","changeStyle","setItem","selectedStyleKey","changeLocale","selectedLocaleKey","components_Bibliography_Bibliography","Dropdown","label","selectedKey","onChanged","placeHolder","options","Lists","lists","handleListClick","selectedList","unSelectList","components_List","renderLists","renderListsContainer","components_Settings_Settings","Login","handleChange","defineProperty","value","handleSubmit","handleLogin","rel","onSubmit","type","required","placeholder","onChange","isLogged","expiryInMs","parseInt","expiry","Date","now","App","stringify","error","errorMsg","errors","toastr","src_components_Lists","src_components_Login","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","bootstrap","initializeIcons","ReactDOM","src_components_App","getElementById","URL","process","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","Office","initialize"],"mappings":"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","file":"static/js/main.1d4737c0.chunk.js","sourcesContent":["export const LOCAL_STORAGE__STYLE = 'style';\nexport const LOCAL_STORAGE__LOCALE = 'locale';\n\nexport const REFDEN_URL = 'https://www.refden.co?utm_source=word';\n\nexport const REFERENCE_TAG_PREFIX = 'refden-ref-';\n\nexport const STYLES = [\n  { key: 'american-medical-association', text: 'American Medical Association' },\n  { key: 'american-society-of-mechanical-engineers', text: 'ASME' },\n  { key: 'apa', text: 'APA' },\n  { key: 'apa-no-ampersand', text: 'APA without &' },\n  { key: 'ieee', text: 'IEEE' },\n  { key: 'vancouver', text: 'Vancouver' },\n];\n\nexport const STYLES_WITH_BRACKETS = [\n  'american-society-of-mechanical-engineers',\n  'ieee',\n];\n\nexport const LOCALES = [\n  { key: 'en-US', text: 'en-US' },\n  { key: 'en-GB', text: 'en-GB' },\n  { key: 'es-ES', text: 'es-ES' },\n];\n","import axios from 'axios';\n\nimport { LOCAL_STORAGE__STYLE, LOCAL_STORAGE__LOCALE } from '../constants';\n\nconst BASE_URL = 'https://www.refden.co/api/';\n\nconst buildUrl = path => `${BASE_URL}${path}`;\n\nconst headers = () => JSON.parse(localStorage.getItem('headers'));\n\nexport const getLists = () =>\n  axios.get(buildUrl('lists'), { headers: headers() });\n\nexport const getReferences = list =>\n  axios.get(buildUrl(`lists/${list.id}/references`), { headers: headers() });\n\nexport const getReference = reference => getReferenceFromId(reference.id);\n\nexport const getReferenceFromId = id =>\n  axios.get(buildUrl(`references/${id}`), {\n    params: {\n      style: localStorage.getItem(LOCAL_STORAGE__STYLE),\n      locale: localStorage.getItem(LOCAL_STORAGE__LOCALE),\n    },\n    headers: headers(),\n  });\n\nexport const login = (email, password) =>\n  axios.post(buildUrl('auth/sign_in'), {\n    email,\n    password,\n  });\n","import _ from 'lodash/fp';\n\nimport { REFERENCE_TAG_PREFIX } from '../constants';\n\nconst onlyReferences = _.flow(\n  _.get('tag'),\n  _.startsWith(REFERENCE_TAG_PREFIX),\n);\n\nconst getReferencesControlItems = _.flow(\n  _.get('items'),\n  _.filter(onlyReferences),\n);\n\nexport default getReferencesControlItems;\n","import _ from 'lodash/fp';\n\nimport { STYLES_WITH_BRACKETS } from '../constants';\n\nimport getReferencesControlItems from './getReferencesControlItems';\n\nconst buildCitationIndex = (index, cslStyle) => {\n  const referenceIndex = (index + 1).toString();\n\n  if (STYLES_WITH_BRACKETS.includes(cslStyle)) {\n    return `[${referenceIndex}]`;\n  } else {\n    return referenceIndex.sup();\n  }\n};\n\nconst updateIndex = (item, referenceIndex) => {\n  item.clear();\n  item.insertHtml(referenceIndex, window.Word.InsertLocation.end);\n};\n\nexport const updateIndexes = (contentControls, cslStyle) => {\n  const referenceTagIndexes = {};\n\n  const referenceItems = getReferencesControlItems(contentControls);\n  const uniqueReferenceItems = _.uniqBy('tag', referenceItems);\n\n  uniqueReferenceItems.forEach((item, index) =>\n    referenceTagIndexes[item.tag] = buildCitationIndex(index, cslStyle));\n\n  referenceItems.forEach((item) =>\n    updateIndex(item, referenceTagIndexes[item.tag]));\n};\n","import { REFERENCE_TAG_PREFIX } from '../constants';\n\nconst getReferenceIdFromControlItem = item =>\n  item.tag.split(REFERENCE_TAG_PREFIX)[1];\n\nexport default getReferenceIdFromControlItem;\n","import { STYLES_WITH_BRACKETS } from '../../constants';\n\nconst getReferenceIndex = (index, cslStyle) => {\n  const referenceIndex = (index + 1).toString();\n\n  if (STYLES_WITH_BRACKETS.includes(cslStyle)) {\n    return `[${referenceIndex}] `;\n  }\n  else {\n    return `${referenceIndex}. `;\n  }\n};\n\nexport default getReferenceIndex;\n","const IS_WITH_NUMBER_REGEX = /(^(x|\\d|\\[\\d])$)/;\n\nconst isCitationFormatWithNumbers = referenceItems => {\n  const citationText = referenceItems[0].text;\n\n  return IS_WITH_NUMBER_REGEX.test(citationText);\n};\n\nexport default isCitationFormatWithNumbers;\n","import _ from 'lodash/fp';\n\nconst insertCitationText = (referenceItem, citation) => {\n  referenceItem.clear();\n\n  if (_.isEmpty(citation)) {\n    referenceItem.insertHtml(\"x\".sup(), window.Word.InsertLocation.end);\n  } else {\n    referenceItem.insertText(citation, window.Word.InsertLocation.end);\n  }\n};\n\nexport default insertCitationText;\n","import _ from \"lodash/fp\";\n\nimport * as refden from '../../api/refden';\nimport { LOCAL_STORAGE__STYLE } from '../../constants';\nimport { updateIndexes } from \"../contentControls\";\nimport getReferencesControlItems from \"../getReferencesControlItems\";\nimport getReferenceIdFromControlItem from '../getReferenceIdFromControlItem';\n\nimport getReferenceIndex from \"./getReferenceIndex\";\nimport isCitationFormatWithNumbers from \"./isCitationFormatWithNumbers\";\nimport insertCitationText from './insertCitationText';\n\nconst BIBLIOGRAPHY_TAG = 'refden_bibliography';\n\nconst REFERENCE_TEXT = 'title';\n\nconst PARAMS_TO_LOAD = [\n  'tag',\n  'text',\n  REFERENCE_TEXT\n];\n\nconst getUniqueReferences = _.flow(\n  _.map(REFERENCE_TEXT),\n  _.uniq,\n);\n\nconst getReferencesFromControls = _.flow(\n  getUniqueReferences,\n  _.sortBy(_.identity),\n);\n\nconst getBibliographyControl = (bibliographyControls, document) => {\n  let contentControl;\n\n  if(_.isEmpty(bibliographyControls.items)) {\n    const paragraph = document.body.insertParagraph(\"\", window.Word.InsertLocation.end);\n    contentControl = paragraph.insertContentControl();\n    contentControl.tag = BIBLIOGRAPHY_TAG;\n  } else {\n    contentControl = bibliographyControls.items[0];\n    contentControl.clear();\n  }\n  return contentControl;\n};\n\nexport const updateBibliography = () => {\n  window.Word.run(context => {\n    const { contentControls } = context.document;\n    context.load(contentControls, PARAMS_TO_LOAD);\n\n    return context.sync().then(() => {\n      const referenceItems = getReferencesControlItems(contentControls);\n      if (_.isEmpty(referenceItems)) return;\n\n      referenceItems.forEach(referenceItem => {\n        const id = getReferenceIdFromControlItem(referenceItem);\n\n        refden.getReferenceFromId(id)\n          .then(response => {\n            const { data } = response;\n\n            referenceItem.title = data.reference;\n            insertCitationText(referenceItem, data.citation);\n\n            context.sync().then(generateBibliography);\n          })\n          .catch(() => localStorage.removeItem('headers'))\n      });\n    });\n  });\n};\n\nconst generateBibliography = () => {\n  const { Word } = window;\n\n  Word.run(context => {\n    const { document } = context;\n    const { contentControls } = document;\n\n    const bibliographyControls = contentControls.getByTag(BIBLIOGRAPHY_TAG);\n\n    context.load(contentControls, PARAMS_TO_LOAD);\n    context.load(bibliographyControls);\n\n    return context.sync().then(() => {\n      const contentControl = getBibliographyControl(bibliographyControls, document);\n\n      const referenceItems = getReferencesControlItems(contentControls);\n      if (_.isEmpty(referenceItems)) return;\n\n      let references;\n\n      if (isCitationFormatWithNumbers(referenceItems)) {\n        const cslStyle = localStorage.getItem(LOCAL_STORAGE__STYLE);\n        updateIndexes(contentControls, cslStyle);\n        references = getUniqueReferences(referenceItems);\n\n        references.forEach((reference, index) => {\n          const referenceIndex = getReferenceIndex(index, cslStyle);\n          contentControl.insertText(referenceIndex, Word.InsertLocation.end);\n          contentControl.insertText(reference, Word.InsertLocation.end);\n          contentControl.insertText(\"\\n\", Word.InsertLocation.end);\n        });\n      } else {\n        references = getReferencesFromControls(referenceItems);\n\n        references.forEach(reference => {\n          contentControl.insertText(reference, Word.InsertLocation.end);\n          contentControl.insertText(\"\\n\", Word.InsertLocation.end);\n        });\n      }\n    });\n  });\n};\n\nexport default generateBibliography;\n","import React from 'react';\nimport _ from 'lodash/fp';\nimport PropTypes from 'prop-types';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { TooltipHost } from 'office-ui-fabric-react/lib/Tooltip';\n\nconst showAuthors = _.flow(\n  _.get('authors'),\n  _.map('name'),\n  _.join(','),\n  _.truncate({ length: 40 }),\n);\n\nconst Reference = ({ reference, onClick }) => (\n  <div className=\"pure-u-1 list\">\n    {reference.title}\n    <br/>\n    <small>\n      {showAuthors(reference)}\n      &nbsp;\n      {reference.published_year}\n    </small>\n    &nbsp;\n    <TooltipHost\n      id={`${reference.id}-tooltip`}\n      content=\"Insert Citation & Reference\"\n      calloutProps={{ gapSpace: 0 }}\n    >\n      <Link\n        aria-describedby={`${reference.id}-tooltip`}\n        onClick={onClick}\n      >\n        <Icon iconName=\"InsertSignatureLine\" className=\"\"/>\n      </Link>\n    </TooltipHost>\n  </div>\n);\n\nReference.propTypes = {\n  reference: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    published_year: PropTypes.number,\n  }),\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Reference;\n","import React, { Component } from 'react';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { MessageBar } from 'office-ui-fabric-react/lib/MessageBar';\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\n\nimport * as refden from '../api/refden';\nimport { REFDEN_URL, REFERENCE_TAG_PREFIX } from '../constants';\nimport generateBibliography from '../lib/generateBibliography';\nimport insertCitationText from '../lib/generateBibliography/insertCitationText';\n\nimport Reference from './Reference/Reference';\n\nimport './Lists.css';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      references: [],\n    };\n  }\n\n  componentDidMount = () => {\n    this.setState({ loading: true });\n    refden.getReferences(this.props.list)\n      .then(response => this.setState({ loading: false, references: response.data }))\n      .catch(() => this.props.logout())\n  };\n\n  insertCitation = reference => event => {\n    event.preventDefault();\n\n    refden.getReference(reference)\n      .then(response => {\n        const data = response.data;\n        const { Word } = window;\n\n        Word.run(context => {\n          const thisDocument = context.document;\n          const range = thisDocument.getSelection();\n\n          const contentControl = range.insertContentControl();\n          contentControl.tag = `${REFERENCE_TAG_PREFIX}${data.id.toString()}`;\n          contentControl.title = data.reference;\n          insertCitationText(contentControl, data.citation);\n\n          generateBibliography();\n\n          return context.sync();\n        });\n      })\n      .catch(() => this.props.logout())\n  };\n\n  renderList = () => {\n    if (this.state.loading) return <Spinner size={SpinnerSize.large} />;\n    if (this.state.references.length === 0) {\n      return (\n        <MessageBar>\n          You need to add a reference first at\n          <Link href={REFDEN_URL} target=\"_blank\">our website.</Link>\n        </MessageBar>\n      );\n    }\n\n    return (\n      this.state.references.map(reference => (\n        <Reference\n          key={reference.id}\n          reference={reference}\n          onClick={this.insertCitation(reference)}\n        />\n      ))\n    );\n  };\n\n  render = () => (\n    <div className=\"pure-u-1\">\n      <h1 className=\"pure-u-1\">{this.props.list.name}</h1>\n      {this.renderList()}\n    </div>\n  );\n}\n\nexport default List;\n","import React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\n\nimport generateBibliography from '../../lib/generateBibliography'\n\nimport './Bibliography.css';\n\nconst Bibliography = () => (\n  <div className=\"pure-u-1\">\n    <DefaultButton\n      primary\n      className=\"pure-u-1 bibliography-btn\"\n      onClick={generateBibliography}\n    >\n      Update Bibliography\n    </DefaultButton>\n  </div>\n);\n\nexport default Bibliography;\n","import React, { Component } from 'react';\nimport { Dropdown } from 'office-ui-fabric-react/lib/Dropdown';\n\nimport Bibliography from '../Bibliography/Bibliography';\nimport { LOCAL_STORAGE__STYLE, LOCAL_STORAGE__LOCALE, STYLES, LOCALES } from '../../constants';\n\nimport { updateBibliography } from '../../lib/generateBibliography/index';\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedStyleKey: localStorage.getItem(LOCAL_STORAGE__STYLE) || 'apa',\n      selectedLocaleKey: localStorage.getItem(LOCAL_STORAGE__LOCALE) || 'en-US',\n    };\n  }\n\n  changeStyle = item => {\n    localStorage.setItem(LOCAL_STORAGE__STYLE, item.key);\n    this.setState({ selectedStyleKey: item.key });\n    updateBibliography();\n  };\n\n  changeLocale = item => {\n    localStorage.setItem(LOCAL_STORAGE__LOCALE, item.key);\n    this.setState({ selectedLocaleKey: item.key });\n    updateBibliography();\n  };\n\n  render = () => (\n    [\n      <Bibliography key=\"bibliography\" />,\n      <div key=\"styles\" className=\"pure-u-1\">\n        <Dropdown\n          label='Style:'\n          selectedKey={this.state.selectedStyleKey}\n          onChanged={this.changeStyle}\n          placeHolder='Select an Style'\n          options={STYLES}\n        />\n      </div>,\n      <div key=\"locales\" className=\"pure-u-1\">\n        <Dropdown\n          label='Locale:'\n          selectedKey={this.state.selectedLocaleKey}\n          onChanged={this.changeLocale}\n          placeHolder='Select a Locale'\n          options={LOCALES}\n        />\n      </div>,\n    ]\n  );\n}\n\nexport default Settings;\n","import React, { Component } from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { Link } from 'office-ui-fabric-react/lib/Link';\nimport { MessageBar } from 'office-ui-fabric-react/lib/MessageBar';\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\n\nimport * as refden from '../api/refden';\nimport { REFDEN_URL } from '../constants';\n\nimport List from './List';\nimport Settings from './Settings/Settings';\n\nimport './Lists.css';\n\nclass Lists extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lists: [],\n      loading: false,\n      selectedList: null,\n    };\n  }\n\n  componentDidMount = () => {\n    this.setState({ loading: true });\n    refden.getLists()\n      .then(response => this.setState({ lists: response.data, loading: false }))\n      .catch(() => this.props.logout())\n  };\n\n  handleListClick = list => () => {\n    this.setState({ selectedList: list });\n  };\n\n  unSelectList = () => {\n    this.setState({ selectedList: null });\n  };\n\n  renderList = () => (\n    <List\n      key={this.state.selectedList.id}\n      list={this.state.selectedList}\n      logout={this.props.logout}\n    />\n  );\n\n  renderLists = () => {\n    if (this.state.loading) return <Spinner size={SpinnerSize.large} />;\n    if (this.state.lists.length === 0) {\n      return (\n        <MessageBar>\n          You need to create a list first at\n          <Link href={REFDEN_URL} target=\"_blank\">our website.</Link>\n        </MessageBar>\n      );\n    }\n\n    return (\n      this.state.lists.map(list => (\n        <Link\n          key={list.id}\n          className=\"pure-u-1 list\"\n          onClick={this.handleListClick(list)}\n        >\n          {list.name}\n        </Link>\n        )\n      )\n    );\n  };\n\n  renderListsContainer = () => (\n    <div className=\"pure-u-1\">\n      <h1 className=\"pure-u-1\">Lists</h1>\n      {this.renderLists()}\n    </div>\n  );\n\n  render = () => (\n    <div className=\"pure-g lists-container\">\n      <Settings />\n      {\n        this.state.selectedList === null ? this.renderListsContainer() : this.renderList()\n      }\n      {\n        this.state.selectedList !== null &&\n          <DefaultButton\n            className=\"pure-u-1-3 mt-1 go-back\"\n            onClick={this.unSelectList}\n          >\n            Go back\n          </DefaultButton>\n      }\n      <DefaultButton className=\"pure-u-1-3 mt-1\" onClick={this.props.logout}>Log out</DefaultButton>\n    </div>\n  )\n}\n\nexport default Lists;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { REFDEN_URL } from '../constants';\n\nimport './Login.css';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = event => {\n    this.props.handleLogin(this.state.email, this.state.password);\n    event.preventDefault();\n  };\n\n  render() {\n    return (\n      <div id=\"loginContainer\">\n        <div className=\"pure-g\">\n          <p className=\"pure-u-1\">\n            Login and bring your references from your account at&nbsp;\n            <a href={REFDEN_URL} target=\"_blank\" rel=\"noopener noreferrer\">www.refden.co</a>\n            . See a video example&nbsp;\n            <a href=\"https://www.youtube.com/watch?v=0-fXMe0zd8Y\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>\n            .\n          </p>\n        </div>\n        <form className=\"pure-form pure-form-stacked text-center\" onSubmit={this.handleSubmit}>\n          <h2>Log in</h2>\n          <input\n            type=\"email\"\n            name=\"email\"\n            className=\"align-center\"\n            required\n            value={this.state.email}\n            placeholder=\"Email\"\n            onChange={this.handleChange}\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            className=\"align-center\"\n            required\n            value={this.state.password}\n            placeholder=\"Password\"\n            onChange={this.handleChange}\n          />\n          <input\n            className=\"pure-button pure-button-primary mt-1\"\n            type=\"submit\"\n            value=\"Submit\"\n          />\n        </form>\n        <br/>\n        <div className=\"pure-g\">\n          <p className=\"pure-u-1\">\n            Don't have a Refden account? Sign up or learn more about our services&nbsp;\n            <a href={REFDEN_URL} target=\"_blank\" rel=\"noopener noreferrer\">\n              here\n            </a>\n            .\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","import React, { Component } from 'react';\nimport toastr from 'toastr';\n\nimport * as refden from '../api/refden';\n\nimport Lists from './Lists';\nimport Login from './Login';\n\nimport './App.css';\n\nconst isLogged = () => {\n  const headers = JSON.parse(localStorage.getItem('headers'));\n  if(headers === null) return false;\n\n  const expiryInMs = parseInt(headers.expiry, 10) * 1000;\n  return expiryInMs && expiryInMs > Date.now();\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogged: isLogged(),\n    };\n  }\n\n  handleLogin = (email, password) => {\n    refden.login(email, password)\n      .then(response => {\n        localStorage.setItem('headers', JSON.stringify(response.headers));\n        this.setState({isLogged: true});\n      })\n      .catch(error => {\n        const errorMsg = error.response.data.errors[0];\n        toastr.error(errorMsg);\n      });\n  };\n\n  logout = () => {\n    localStorage.removeItem('headers');\n    this.setState({isLogged: false});\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {\n          this.state.isLogged\n            ? <Lists logout={this.logout} />\n            : <Login handleLogin={this.handleLogin} />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { initializeIcons } from 'office-ui-fabric-react/lib/Icons';\n\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport './index.css';\nimport 'toastr/build/toastr.min.css';\nimport 'purecss/build/pure-min.css';\n\nconst bootstrap = () =>\n  initializeIcons();\n  ReactDOM.render(<App />, document.getElementById('root'));\n\nbootstrap();\nregisterServiceWorker();\n\n// INFO: The add-in is ready to start interacting with the application and hosted document.\nwindow.Office.initialize = () => bootstrap();\n"],"sourceRoot":""}